package sorting

/*
	Cocktail sort — Сортировка перемешиванием, или Шейкерная сортировка, или двунаправленная — разновидность пузырьковой сортировки
	Худшее время: O(n^2)
	Среднее время: O(n^2)
	Лучшее время: O(n)
	Память: O(1)

	Шейкерная сортировка отличается от пузырьковой тем, что она двунаправленная: алгоритм перемещается не строго слева направо, а сначала слева направо, затем справа налево.Eсли при движении по части массива перестановки не происходят, то эта часть массива уже отсортирована и её можно исключить из рассмотрения. При движении от конца массива к началу минимальный элемент «всплывает» на первую позицию, а максимальный элемент сдвигается только на одну позицию вправо.
	Границы рабочей части массива (то есть части массива, где происходит движение) устанавливаются в месте последнего обмена на каждой итерации.
	Массив просматривается поочередно справа налево и слева направо.
*/
func ShakerSort(slice []int) {
	left := 0
	right := len(slice) - 1
	swap := right

	for left < right {
		for i := left; i < right; i++ {
			if slice[i] > slice[i+1] {
				slice[i], slice[i+1] = slice[i+1], slice[i]
				swap = i
			}
		}

		right = swap

		for i := right; i > left; i-- {
			if slice[i] < slice[i-1] {
				slice[i], slice[i-1] = slice[i-1], slice[i]
				swap = i
			}
		}
		left = swap
	}
}
